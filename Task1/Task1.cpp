#include <iostream>

//Обчислити 6 значень функції Y = (6х + 12) / (4 * x2 - 3) (х змінюється від 1 з кроком 1).
//Результат округлити до цілого і розмістити в пам'яті.

int main()
{
	long X = 1; // осередок пам'яті для аргументу
	long XTemp = 0; // Временная X для возведения в степень X
	long six = 6; // Умножать на 6
	long REZ[6]; // 6 осередків пам'яті для результатів

	_asm 
	{ // початок ассемблерной вставкиччччччччч
		lea EBX, REZ		// завантаження адреси результатів в регістр EBX

		mov ECX, 6			// лічильник кількості повторень циклу
		m1:	mov EAX, 4			// EAX = 4
		imul X				// EAX = 4 * x
		imul X				// EAX = 4 * x * x
		sub EAX, 3			// EAX = 4 * x * x - 3
		mov EDI, EAX		// пересилання знаменника в регістр EDI

		mov EDX, X
		mov XTemp, EDX
		mov EAX, 6			// EAX = 6
		// Умножать 6 в степень X
		L1:
		imul six
			dec XTemp
			JNZ L1
		idiv six
		add EAX, 12			// EAX = 6^X + 12
		cdq					// розширення операнда - діленого в EAX - EDX
		div	EDI				// частка - EAX, залишок - EDX
		shr	EDI, 1			// ділення знаменника(дільника) на 2
		cmp	EDI, EDX		// порівняння половини дільника із залишком
		adc	EAX, 0			//додавання до частки залишка від порівняння				
		mov	dword ptr[EBX], EAX// пересилання результату в па - м'ять
		add	EBX, 4

		inc	X				// збільшення аргументу
		loop	m1			// зациклення по лічильнику в ЕСХ

	}// закінчення ассемблерной вставки
	return 0;
}
