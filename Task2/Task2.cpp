#include <iostream>

//Знайти ціле значення аргументу, при якому функція Y = (2000 + х) / (8 * х2 + 25) стане менше 10.

int main()
{
	long X = -1;     // осередок пам'яті для аргументу
	long Y = 0;     // осередок пам'яті для функції
	_asm
	{ // початок ассемблерной вставки
        mov ECX, 20         // Количество возможных циклов, без этого выдает ошибку
      m1:         inc X     // X начинается с 0
        mov EAX, 8          // EAX = 8
        imul X              // EAX = 8 * X
        imul X              // EAX = 8 * X * X
        add EAX, 25         // EAX = 8 * X * X + 25
        mov EDI, EAX        // пересилання знаменника в регістр EDI

        mov EAX, 2000       // EAX = 2000
        add EAX, X          // EAX = 2000 + X

        cdq                 // розширення операнда-діленого в EAX-EDX
        div	EDI             // приватне - EAX, залишок - EDX
        shr	EDI, 1          // ділення знаменника (дільника) на 2
        cmp	EDI, EDX        // порівняння половини дільника із залишком
        adc	EAX, 0          // додавання до приватного позики від порівняння
        mov Y, EAX          // пересилання результату в Y
        mov EAX, 10         // пересилання в EAX з чим порівнювати
        cmp EAX, Y          // Поки Y > EAX - продовжити цикл
        jc m1
	}// закінчення ассемблерной вставки
    return 0;
}

